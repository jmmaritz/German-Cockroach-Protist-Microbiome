
## 18S rRNA gene amplicons - R WORKFLOW

## R data analysis workflow used in manuscript:
## Overlapping Community Composition of Gut and Fecal Microbiomes in Lab-Reared and Field-Collected German Cockroaches
## Kakumanu M. L., Maritz J. M., Carlton J. M., Schal C. (2018) Appl Environ Microbiol 84: 17.



############### Load in the Data ##############

library("phyloseq")
library("ggplot2")
library("gridExtra")
library("extrafont")
library("vegan")

setwd("~/Desktop/Cockroach/18S/R_files")
load("~/Desktop/Cockroach/18S/R_files/CR_analysis.RData")

otufile = "CR_18S_otu_table_w_tax_EUK_NOhost_af_min5000_filtered_sorted.biom"
mapfile = "CR_mapp_R.txt"

qiimedata = import_biom(BIOMfilename=otufile)
mapdata = import_qiime(mapfilename=mapfile)

CR_18S = merge_phyloseq(qiimedata, mapdata)

#### Get variables organized
Variables=data.frame(sample_data(CR_18S))

SampleID = Variables$SampleID
Source = Variables$Source
Gender = Variables$Gender
Rep = Variables$Reps
Location = Variables$Location1
Environment = Variables$Environment


############### Beta Diversity ##############

#### NMDS
CR.18S.nmds.bray = metaMDS(t(otu_table(CR_18S)), distance = "bray", k=2, trymax = 200)
stressplot(CR.18S.nmds.bray)

## Make dataframe of scores and metadata
CR.18S.nmds.bray.df = data.frame(scores(CR.18S.nmds.bray, dispaly=c("sites")), Environment, Source, Gender, Location)
CR.18S.nmds.bray.df$Environment = factor(CR.18S.nmds.bray.df$Environment, levels = c("Field", "Lab"))
CR.18S.nmds.bray.df$Source = factor(CR.18S.nmds.bray.df$Source, levels = c("Fecal_material", "Gut", "Whole_Insect"))
levels(CR.18S.nmds.bray.df$Source)[levels(CR.18S.nmds.bray.df$Source)=="Fecal_material"] <- "Fecal"
levels(CR.18S.nmds.bray.df$Source)[levels(CR.18S.nmds.bray.df$Source)=="Whole_Insect"] <- "WI"
CR.18S.nmds.bray.df$Gender = factor(CR.18S.nmds.bray.df$Gender, levels = c("Female", "Male"))
CR.18S.nmds.bray.df$Location = factor(CR.18S.nmds.bray.df$Location, levels = c("Lab", "Apt1", "Apt2", "Apt3"))

### Test for significant differences
## re-create the distance matrix used
CR.18S.nmds.bray.dist = metaMDSredist(CR.18S.nmds.bray)
## Make sure everything is in the correct order
CR.bray.mat = as.matrix(CR.18S.nmds.bray.dist)
CR.bray.mat = CR.bray.mat[order(row.names(CR.bray.mat)), ]
CR.bray.mat = CR.bray.mat[, order(colnames(CR.bray.mat))]
CR.bray.mat.dist = as.dist(CR.bray.mat)

## adonis test
CR.all.test = adonis(CR.bray.mat.dist ~ Source + Environment + Location + Gender, data = CR.18S.nmds.bray.df, permutations = 10000)
## Multiple testing correction
levs = rownames(CR.all.test$aov.tab)
CR.all.pvals = rbind(Variable = levs[1:4], R2 = CR.all.test$aov.tab[,5][1:4], pval = CR.all.test$aov.tab[,6][1:4], bonf = p.adjust(CR.all.test$aov.tab[,6][1:4], method='bonferroni'), fdr = p.adjust(CR.all.test$aov.tab[,6][1:4], method='fdr'))

#### Make the NMDS beta diversity plots
### By Location, Gender and Source

## Plot shapes for Location variable:
# Lab - diamond: 23
# Apt1 - square: 22
# Apt2 - circle: 21
# Apt3 - triangle: 24

## Plot colors for Source variable:
# Fecal - Blue: #0000ff
# Gut - Yellow: #ffff00
# Whole Insect - Green: #40ff00

## Plot alpha for Gender variable:
# Male - transparent: 0.25
# Female - opaque: 1

## Make plot
CR.nmds = ggplot(CR.18S.nmds.bray.df, aes(x=NMDS1, y=NMDS2, shape=Location, fill=Source, label = SampleID)) + geom_point(size=2, aes(fill=NULL))
CR.nmds = CR.nmds + geom_point(size=2, aes(alpha = Gender))
CR.nmds = CR.nmds + scale_alpha_manual(values = c(1, 0.25))
CR.nmds = CR.nmds + scale_shape_manual(values = c(23,22,21,24))
CR.nmds = CR.nmds + scale_fill_manual(values=c("#0000ff", "#ffff00", "#40ff00"))
CR.nmds = CR.nmds + guides(shape = guide_legend(override.aes = list(size=3, shape = c(23,22,21,24), fill = "black", alpha = c(1,1,1,1))))
CR.nmds = CR.nmds + guides(fill = guide_legend(override.aes = list(size=3, shape = 21, fill = c("#0000ff", "#ffff00", "#40ff00"), alpha = c(1,1,1))))
CR.nmds = CR.nmds + guides(alpha = guide_legend(override.aes = list(size=3, shape = 21, fill = "black", colour="black", alpha = c(1,0.25))))
CR.nmds = CR.nmds + theme(axis.title.y=element_text(size=10, family="Arial"), axis.text.y=element_text(size=10, family="Arial"), axis.title.x=element_text(size=10, family="Arial"), axis.text.x=element_text(size=10, family="Arial"))
CR.nmds = CR.nmds + theme(legend.title=element_text(size=10, family="Arial", face="bold"), legend.text=element_text(size=10, family="Arial"))
CR.nmds = CR.nmds + theme(legend.key=element_rect(fill="white"), legend.position="bottom", legend.justification="center", legend.key.size=unit(0.5, "cm"), panel.grid.minor=element_blank())

## Get the legend to make a common one
get_legend<-function(myggplot){
  tmp <- ggplot_gtable(ggplot_build(myggplot))
  leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
  legend <- tmp$grobs[[leg]]
  return(legend)
}
CR.legend = get_legend(CR.nmds)
# Plot the legend by itself
pdf(file="CR_legend.pdf", width=7.2, height=0.2, bg="white", useDingbats = FALSE)
plot(CR.legend)
dev.off()

## Remove legend from plot
CR.nmds = CR.nmds + theme(legend.position="none", plot.margin=unit(c(0.1,0.1,0.1,0.1), "cm"))


############### Alpha Diversity ##############

#### Import the Shannon diversity calculated in QIIME
ShannonCR = read.table("CR_18S_otu_table_w_tax_EUK_af_min5000_filtered_sorted_alpha_5000.txt")
ShannonCR = ShannonCR[order(row.names(CR.18S.nmds.bray.df)),]

### Add Shannon diversity to data frame
CR.18S.nmds.bray.df = cbind(CR.18S.nmds.bray.df, ShannonCR)

#### Test for significant differences in major categories 
wilcox.test(CR.18S.nmds.bray.df$shannon ~ CR.18S.nmds.bray.df$Environment)
wilcox.test(CR.18S.nmds.bray.df$ShannonCR ~ CR.18S.nmds.bray.df$Gender)

kruskal.test(CR.18S.nmds.bray.df$shannon ~ CR.18S.nmds.bray.df$Source)
kruskal.test(CR.18S.nmds.bray.df$shannon ~ CR.18S.nmds.bray.df$Location)

### Location was significant, post hoc test for individual differences
levs.location = levels(CR.18S.nmds.bray.df$Location)

## Define the test matrix
dist.met.shannon = CR.18S.nmds.bray.df$shannon
# Set up the pairwise tests
phoc.test.location = function(x){
  spair = (CR.18S.nmds.bray.df$Location %in% x)
  phoc = wilcox.test(dist.met.shannon[spair] ~ Location[spair], 
                     data=CR.18S.nmds.bray.df)
  c(x, phoc$p.value)
}
# Run the tests
p.vals.location = combn(levs.location,2, phoc.test.location)
# Multiple testing correction
p.vals.location.corrected = rbind(p.vals.location,
                                  p.adjust(p.vals.location[3,], 
                                           method="bonferroni"),
                                  p.adjust(p.vals.location[3,],
                                           method="fdr"))

#### Make the alpha diversity box plots
## Plot colors for Source variable:
# Fecal - Blue: #0000ff
# Gut - Yellow: #ffff00
# Whole Insect - Green: #40ff00

### Make plot, no legend
CR.alpha = ggplot(CR.18S.nmds.bray.df, aes(x=Location, y=ShannonCR)) + geom_boxplot(aes(fill=Source, alpha=Gender))
CR.alpha = CR.alpha + ylab("Shannon Diversity Index")
CR.alpha = CR.alpha + scale_fill_manual(values=c("#0000ff", "#ffff00", "#40ff00"))
CR.alpha = CR.alpha + scale_alpha_manual(values = c(1, 0.25))
CR.alpha = CR.alpha + theme(axis.title.y=element_text(size=10, family="Arial"), axis.text.y=element_text(size=10, family="Arial"), axis.title.x=element_blank(), axis.text.x=element_text(size=10, family="Arial"))
CR.alpha = CR.alpha + theme(plot.margin=unit(c(0.1,0.1,0.1,0.1), "cm"), legend.position = "none", panel.grid.minor=element_blank())

### Make one figure of Alpha and Beta plots
Fig8 = grid.arrange(CR.alpha, CR.nmds, ncol=2, nrow=1)
pdf(file="Fig8.pdf", width=7, height=3.3, bg="white", useDingbats = FALSE)
plot(Fig8)
dev.off()

save.image("~/Desktop/Cockroach/18S/R_files/CR_analysis.RData")
